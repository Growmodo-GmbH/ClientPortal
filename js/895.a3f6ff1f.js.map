{"version":3,"file":"js/895.a3f6ff1f.js","mappings":";;;;;;;;;;;;;;;;;;;EACOA,KAAK,EAAC;AAA6B;;;EAYLA,KAAK,EAAC;;;;kDAZzCC,8CAAA,CAiBM,OAjBNC,UAiBM,iDAhBJD,8CAAA,CAeME,gCAAA,QAAAC,sCAAA,CAfqCC,IAAA,CAAAC,SAAS,EAAhBC,GAAG;oDAAvCN,8CAAA,CAeM;MAfDD,KAAK,EAAC,iBAAiB;MAA2BQ,GAAG,EAAED;QAC1DE,uCAAA,CAaaC,qBAAA;MAZVC,SAAS,EAAEN,IAAA,CAAAM,SAAS;kBACZN,IAAA,CAAAO,UAAU;iEAAVP,IAAA,CAAAO,UAAU,GAAAC,MAAA;MAClBC,GAAG,EAAEP,GAAG,CAACQ,KAAK,IAAIR,GAAG;MACrBS,IAAI,EAAEX,IAAA,CAAAW,IAAI,IAAIC,SAAS;MACvBC,KAAK,EAAEX,GAAG,CAACW,KAAK;MACjBlB,KAAK,EAAC,wHAAwH;MAC7HmB,KAAK,GAAIL,GAAG,IAAMT,IAAA,CAAAe,QAAQ,KAAKN,GAAG;;mDAEnC,MAAe,yFAAZP,GAAG,CAACc,KAAK,IAAG,GACf,MAAWd,GAAG,EAAEe,WAAW,6CAA3BrB,8CAAA,CAEM,OAFNsB,UAEM,EAAAC,2CAAA,CADDjB,GAAG,EAAEe,WAAW;;;;;;;;AAQc;AAE3C,4EAAeG,2CAAe,CAAC;EAC7BT,IAAI,EAAE,gBAAgB;EAEtBW,KAAK,EAAE,CAAC,SAAS,CAAC;EAElBC,KAAK,EAAE;IACLC,SAAS,EAAE,CAAC,CAAC;IACbvB,SAAS,EAAE;MACTwB,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB,CAAC;IACDhB,IAAI,EAAE;MACJc,IAAI,EAAEG,MAAM;MACZD,OAAO,EAAE;IACX,CAAC;IACDZ,QAAQ,EAAE;MACRU,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX,CAAC;IACDrB,SAAS,EAAE;MACTmB,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX;EACF,CAAC;EAEDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLvB,UAAU,EAAEc,+BAAG,CAAC,EAAE;IACpB,CAAC;EACH,CAAC;EAEDU,KAAK,EAAE;IACLP,SAAS,EAAE;MACT,MAAMQ,OAAOA,CAACvB,GAAG,EAAE;QACjB,IAAIA,GAAG,EAAE,IAAI,CAACwB,WAAW,CAACxB,GAAG,CAAC;MAChC;IACF,CAAC;IACDF,UAAU,EAAE;MACVyB,OAAOA,CAACvB,GAAG,EAAE;QACX,IAAI,CAACyB,KAAK,CAAC,SAAS,EAAEzB,GAAG,CAAC;MAC5B;IACF;EACF,CAAC;EAED0B,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACX,SAAS,EAAE,IAAI,CAACS,WAAW,CAAC,IAAI,CAACT,SAAS,CAAC;EACtD,CAAC;EAEDY,OAAO,EAAE;IACPH,WAAWA,CAACxB,GAAG,EAAE;MACf,IAAI,CAACF,UAAS,GAAIE,GAAG;IACvB;EACF;AACF,CAAC,CAAC;;AE7EuZ;;;;;;;;;ACA9U;AACV;AACL;;AAE5D,CAAkI;AAClI,iCAAiC,+BAAe,CAAC,qCAAM,aAAa,MAAM;;AAE1E,qDAAe,WAAW;AAC1B,CAAoE;AACgC;AACpG,6BAAQ,CAAC,qCAAM,iBAAiB,SAAS,2BAAC","sources":["webpack://growmodo_hub/./src/components/Helpers/CheckboxSelect.vue","webpack://growmodo_hub/./src/components/Helpers/CheckboxSelect.vue?6b3c","webpack://growmodo_hub/./src/components/Helpers/CheckboxSelect.vue?da81","webpack://growmodo_hub/./src/components/Helpers/CheckboxSelect.vue?d96e"],"sourcesContent":["<template>\n  <div class=\"row q-col-gutter-md q-pb-md\">\n    <div class=\"col-12 col-sm-6\" v-for=\"opt in selection\" :key=\"opt\">\n      <q-checkbox\n        :autofocus=\"autofocus\"\n        v-model=\"modelValue\"\n        :val=\"opt.value || opt\"\n        :name=\"name || undefined\"\n        :color=\"opt.color || 'secondary'\"\n        class=\"field-select text-body1 font-medium rounded bg-none text-primary-500 q-py-sm q-pl-sm full-width flex-label full-height\"\n        :rules=\"[(val) => (required ? !!val || '' : true)]\"\n      >\n        {{ opt.label }}\n        <div v-if=\"opt?.description\" class=\"text-caption text-primary-500\">\n          {{ opt?.description }}\n        </div>\n      </q-checkbox>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue';\n\nexport default defineComponent({\n  name: 'CheckboxSelect',\n\n  emits: ['updated'],\n\n  props: {\n    initModel: {},\n    selection: {\n      type: Array,\n      default: () => [],\n    },\n    name: {\n      type: String,\n      default: '',\n    },\n    required: {\n      type: Boolean,\n      default: false,\n    },\n    autofocus: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data() {\n    return {\n      modelValue: ref([]),\n    };\n  },\n\n  watch: {\n    initModel: {\n      async handler(val) {\n        if (val) this.formatModel(val);\n      },\n    },\n    modelValue: {\n      handler(val) {\n        this.$emit('updated', val);\n      },\n    },\n  },\n\n  mounted() {\n    if (this.initModel) this.formatModel(this.initModel);\n  },\n\n  methods: {\n    formatModel(val) {\n      this.modelValue = val;\n    },\n  },\n});\n</script>\n","export * from \"-!../../../node_modules/@quasar/app-webpack/lib/webpack/loader.js.transform-quasar-imports.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use[0]!../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[3]!../../../node_modules/@quasar/app-webpack/lib/webpack/loader.vue.auto-import-quasar.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./CheckboxSelect.vue?vue&type=template&id=3445af7c\"","export { default } from \"-!../../../node_modules/@quasar/app-webpack/lib/webpack/loader.js.transform-quasar-imports.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use[0]!../../../node_modules/@quasar/app-webpack/lib/webpack/loader.vue.auto-import-quasar.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./CheckboxSelect.vue?vue&type=script&lang=js\"; export * from \"-!../../../node_modules/@quasar/app-webpack/lib/webpack/loader.js.transform-quasar-imports.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use[0]!../../../node_modules/@quasar/app-webpack/lib/webpack/loader.vue.auto-import-quasar.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./CheckboxSelect.vue?vue&type=script&lang=js\"","import { render } from \"./CheckboxSelect.vue?vue&type=template&id=3445af7c\"\nimport script from \"./CheckboxSelect.vue?vue&type=script&lang=js\"\nexport * from \"./CheckboxSelect.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/mikeangelosaraus/Downloads/Growmodo/growmodo_hub/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__\nimport QCheckbox from 'quasar/src/components/checkbox/QCheckbox.js';\nimport qInstall from \"../../../node_modules/@quasar/app-webpack/lib/webpack/runtime.auto-import.js\";\nqInstall(script, 'components', {QCheckbox});\n"],"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","selection","opt","key","_createVNode","_component_q_checkbox","autofocus","modelValue","$event","val","value","name","undefined","color","rules","required","label","description","_hoisted_2","_toDisplayString","defineComponent","ref","emits","props","initModel","type","Array","default","String","Boolean","data","watch","handler","formatModel","$emit","mounted","methods"],"sourceRoot":""}